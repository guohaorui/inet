[General]
network = FramePreemptionExample

# disable ARP packets
*.hasGlobalArp = true

# disable all non frame preemption related TSN features in all network nodes
*.*.hasTimeSynchronization = false
*.*.hasIngressTrafficFiltering = false
*.*.hasEgressTrafficShaping = false
*.*.hasStreamRedundancy = false
*.*.hasOutputStreams = false

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps

# enable checksum computation for PCAP recording
**.crcMode = "computed"
**.fcsMode = "computed"

# PCAP recording
**.eth[*].recordPcap = true
**.dumpProtocols = "ethernetphy"

# applications
*.device1.numApps = 2
*.device1.app[*].typename = "UdpApp"
*.device1.app[0].source.packetNameFormat = "background-%c"
*.device1.app[1].source.packetNameFormat = "ts-%c"
*.device1.app[0].tagger.userPriority = 0
*.device1.app[1].tagger.userPriority = 1
*.device1.app[0].tagger.vlanId = 1
*.device1.app[1].tagger.vlanId = 0
*.device1.app[*].io.destAddress = "device2"
*.device1.app[0].io.destPort = 1000
*.device1.app[1].io.destPort = 1001

# background ~96Mbps
*.device1.app[0].source.packetLength = 1200B
*.device1.app[0].source.productionInterval = truncnormal(100us,50us)

# high-ts ~200kbps (correctly working) or ~100Mbps (faulty)
*.device1.app[1].source.packetLength = 25B
*.device1.app[1].source.productionInterval = truncnormal(1ms,500us)

# applications
*.device2.numApps = 2
*.device2.app[*].typename = "UdpSink"
*.device2.app[0].localPort = 1000
*.device2.app[1].localPort = 1001

[Config NormalOperation]
description = "High priority frames wait for low priority frames to be transmitted"

[Config FramePreemption]
description = "Transmission of low priority frames are preempted by high priority frames"

# enable Ethernet frame preemption
*.*.hasFramePreemption = true
