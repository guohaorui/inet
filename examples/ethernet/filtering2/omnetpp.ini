[General]
network = EthernetFilteringExample2

**.arp.typename = "GlobalArp"

*.switch*.llc.typename = ""
*.*.ethernet.typename = "EthernetLayer"

*.client*.numApps = 2
*.client*.app[*].typename = "Ieee8022LlcApp"
*.client*.app[0].source.packetNameFormat = "background-%c"
*.client*.app[1].source.packetNameFormat = "video-%c"
*.client*.app[*].io.interface = "eth0"
*.client*.app[*].io.remoteSap = 0
*.client*.app[0].io.remoteAddress = "server1"
*.client*.app[1].io.remoteAddress = "server2"

# background ~40Mbps
*.client*.app[0].source.packetLength = 1000B
*.client*.app[0].source.productionInterval = truncnormal(200us,100us)

# video ~2Mbps
*.client*.app[1].source.packetLength = 500B
*.client*.app[1].source.productionInterval = truncnormal(2ms,1ms)

# server*
*.server*.numApps = 1
*.server*.app[0].typename = "Ieee8022LlcSink"
*.server*.app[0].io.localSap = 0

# interface
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps

# MAC address table
*.switch1.macTable.addressTable = [{address: "server1", interface: "eth2"},
                                   {address: "server2", interface: "eth2"}]
*.switch2.macTable.addressTable = [{address: "server1", interface: "eth0"},
                                   {address: "server2", interface: "eth1"}]

# stream decoding
*.switch*.bridging.typename = "BridgingLayer"
*.switch*.bridging.streamPolicy.typename = "StreamLayer"
*.switch*.bridging.streamPolicy.streamDecoder.streams = [{source: "client1", destination: "server1", stream: "c1_s1"},
                                                         {source: "client1", destination: "server2", stream: "c1_s2"},
                                                         {source: "client2", destination: "server1", stream: "c2_s1"},
                                                         {source: "client2", destination: "server2", stream: "c2_s2"}]

# per-stream filtering
*.switch*.bridging.filterPolicy.typename = "FilterPolicyLayer"
*.switch*.bridging.filterPolicy.filter.numStreams = 4
*.switch*.bridging.filterPolicy.filter.classifier.streamsToGateIndices = "c1_s1 0 c2_s1 1 c1_s2 2 c2_s2 3"

*.switch*.bridging.filterPolicy.filter.meter[*].typename = "SingleRateTwoColorMeter"
*.switch*.bridging.filterPolicy.filter.meter[0].cir = 40Mbps
*.switch*.bridging.filterPolicy.filter.meter[1].cir = 40Mbps
*.switch*.bridging.filterPolicy.filter.meter[2].cir = 2Mbps
*.switch*.bridging.filterPolicy.filter.meter[3].cir = 2Mbps

*.switch*.bridging.filterPolicy.filter.meter[0].cbs = 10kB
*.switch*.bridging.filterPolicy.filter.meter[1].cbs = 10kB
*.switch*.bridging.filterPolicy.filter.meter[2].cbs = 10kB
*.switch*.bridging.filterPolicy.filter.meter[3].cbs = 10kB
