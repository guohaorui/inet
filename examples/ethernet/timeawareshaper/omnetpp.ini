[General]
network = TimeAwareShaperExample
description = "(abstract)"

# packet name
*.*.app[0].source.packetNameFormat = "%N-%c"

# wheels 160 kbps
*.wheel*.numApps = 1
*.wheel*.app[0].typename = "UdpApp"
*.wheel*.app[0].source.packetLength = 100B
*.wheel*.app[0].source.productionInterval = 5ms
*.wheel*.app[0].io.destAddress = "hud"
*.wheel1.app[0].io.destPort = 1000
*.wheel2.app[0].io.destPort = 1001
*.wheel3.app[0].io.destPort = 1002
*.wheel4.app[0].io.destPort = 1003

# cameras produce 22.4 Mbps to almost completely utilize the 100 Mbps links
*.camera*.numApps = 1
*.camera*.app[0].typename = "UdpApp"
*.camera*.app[0].source.packetLength = 1400B
*.camera*.app[0].source.productionInterval = 500us
*.camera*.app[0].io.destAddress = "hud"
*.camera1.app[0].io.destPort = 1004
*.camera2.app[0].io.destPort = 1005
*.camera3.app[0].io.destPort = 1006
*.camera4.app[0].io.destPort = 1007

# sink applications
*.hud.numApps = 8
*.hud.app[*].typename = "UdpSink"
*.hud.app[0].localPort = 1000
*.hud.app[1].localPort = 1001
*.hud.app[2].localPort = 1002
*.hud.app[3].localPort = 1003
*.hud.app[4].localPort = 1004
*.hud.app[5].localPort = 1005
*.hud.app[6].localPort = 1006
*.hud.app[7].localPort = 1007

# avoid ARP
*.*.ipv4.arp.typename = "GlobalArp"
*.*Switch.macTable.addressTable = [{address: "hud", interface: "eth0"}]

# disable legacy Ethernet
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"

# bitrates
*.*.eth[*].bitrate = 100Mbps

[Config Default]
description = "no priority queueing and no time aware shaping"

[Config PriorityQueueing]
description = "with priority queueing but without time aware shaping"

# ethernet TSN
*.*Switch.eth[*].macLayer.queue.typename = "PriorityQueue"
*.*Switch.eth[*].macLayer.queue.numQueues = 2
*.*Switch.eth[*].macLayer.queue.classifier.typename = "ContentBasedClassifier"
*.*Switch.eth[*].macLayer.queue.classifier.packetFilters = "wheel*;camera*"
*.*Switch.eth[*].macLayer.queue.classifier.packetDataFilters = "*;*"

[Config TASBase]
description = "with priority queueing and time aware shaping"

# ethernet TSN
*.*Switch.eth[*].macLayer.queue.typename = "GatingPriorityQueue"
*.*Switch.eth[*].macLayer.queue.numQueues = 2
*.*Switch.eth[*].macLayer.queue.buffer.typename = ""
*.*Switch.eth[*].macLayer.queue.classifier.typename = "ContentBasedClassifier"
*.*Switch.eth[*].macLayer.queue.classifier.packetFilters = "wheel*;camera*"
*.*Switch.eth[*].macLayer.queue.classifier.packetDataFilters = "*;*"
*.*Switch.eth[*].macLayer.queue.queue[*].typename = "DropTailQueue"

# stream reservation
*.gateSchedulingConfigurator.gateCycleDuration = 5ms
# 54B = 8B (UDP) + 20B (IP) + 14B + 4B (ETH MAC) + 8B (ETH PHY)
*.gateSchedulingConfigurator.configuration =
   [{priority: 0, application: "app[0]", source: "wheel*", destination: "hud", packetLength: 100B + 54B, packetInterval: 5ms, maxLatency: 100us},
    {priority: 1, application: "app[0]", source: "camera*", destination: "hud", packetLength: 1400B + 54B, packetInterval: 500us, maxLatency: 1ms}]

# gate scheduling visualization
*.visualizer.gateVisualizer.displayGates = true
*.visualizer.gateVisualizer.displayDuration = 100us
*.visualizer.gateVisualizer.gateFilter = "**.eth[0].**"
*.visualizer.gateVisualizer.height = 16

[Config AlwaysOpenTAS]
description = "Always open gates using time aware shaping"
extends = TASBase

*.gateSchedulingConfigurator.typename = "AlwaysOpenGateSchedulingConfigurator"

[Config SimpleTAS]
description = "Simple eager scheduler based time aware shaping"
extends = TASBase

*.gateSchedulingConfigurator.typename = "SimpleGateSchedulingConfigurator"

[Config Z3TAS]
description = "Native Z3 SAT solver based time aware shaping"
extends = TASBase

# KLUDGE TODO eliminate these lines when the SAT solver can work out a solution for the original set of parameters
*.camera*.app[0].source.productionInterval = 1000us
*.gateSchedulingConfigurator.configuration =
   [{priority: 0, application: "app[0]", source: "wheel*", destination: "hud", packetLength: 100B + 54B, packetInterval: 5ms, maxLatency: 100us},
    {priority: 1, application: "app[0]", source: "camera*", destination: "hud", packetLength: 1400B + 54B, packetInterval: 1000us, maxLatency: 1ms}]

*.gateSchedulingConfigurator.typename = "Z3GateSchedulingConfigurator"

[Config TSNschedTAS]
description = "External TSNsched tool based time aware shaping"
extends = TASBase

*.gateSchedulingConfigurator.typename = "TSNschedGateSchedulingConfigurator"

[Config BrokenCameraDefault]
description = "one camera produces 40 times higher traffic without priority queueing"
extends = Default
*.camera1.app[0].source.productionInterval = 25us

[Config BrokenCameraPriorityQueueing]
description = "one camera produces 40 times higher traffic without time aware shaping"
extends = PriorityQueueing

*.camera1.app[0].source.productionInterval = 25us

[Config BrokenCameraTASBase]
description = "one camera produces 40 times higher traffic with time aware shaping"
extends = TASBase

*.camera1.app[0].source.productionInterval = 25us

[Config BrokenCameraAlwaysOpenTAS]
description = "Always open gates using time aware shaping with one camera that produces 40 times higher traffic with time aware shaping"
extends = BrokenCameraTASBase

*.gateSchedulingConfigurator.typename = "AlwaysOpenGateSchedulingConfigurator"

[Config BrokenCameraSimpleTAS]
description = "Simple eager scheduler based time aware shaping with one camera that produces 40 times higher traffic with time aware shaping"
extends = BrokenCameraTASBase

*.gateSchedulingConfigurator.typename = "SimpleGateSchedulingConfigurator"

[Config BrokenCameraZ3TAS]
description = "Native Z3 SAT solver based time aware shaping with one camera that produces 40 times higher traffic with time aware shaping"
extends = BrokenCameraTASBase

# KLUDGE TODO eliminate these lines when the SAT solver can work out a solution for the original set of parameters
*.camera*.app[0].source.productionInterval = 1000us
*.gateSchedulingConfigurator.configuration =
   [{priority: 0, application: "app[0]", source: "wheel*", destination: "hud", packetLength: 100B + 54B, packetInterval: 5ms, maxLatency: 100us},
    {priority: 1, application: "app[0]", source: "camera*", destination: "hud", packetLength: 1400B + 54B, packetInterval: 1000us, maxLatency: 1ms}]

*.gateSchedulingConfigurator.typename = "Z3GateSchedulingConfigurator"

[Config BrokenCameraTSNschedTAS]
description = "External TSNsched tool based time aware shaping with one camera that produces 40 times higher traffic with time aware shaping"
extends = BrokenCameraTASBase

*.gateSchedulingConfigurator.typename = "TSNschedGateSchedulingConfigurator"
