[General]
# avoid ARP
*.*.ipv4.arp.typename = "GlobalArp"

# enable modular Ethernet protocol
*.*.ethernet.typename = "EthernetLayer"

# enable modular Ethernet interface
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps

# clock drift
**.oscillator.typename = "ConstantDriftOscillator"
**.oscillator.driftRate = uniform(-100ppm, 100ppm)

[Config TwoMastersOneSyncTree]
network = GptpTreeExample

# grand master clocks
*.grandMaster*.clock.typename = "MultiClock"
*.grandMaster*.clock.numClocks = 2

# gPTP grand masters
*.grandMaster*.numApps = 1
*.grandMaster*.app[0].typename = "MultiDomainGptp"
*.grandMaster*.app[0].numDomains = 2
*.grandMaster1.app[0].clockModule = "grandMaster1.clock"
*.grandMaster2.app[0].clockModule = "grandMaster2.clock"
*.grandMaster1.app[0].domain[0].gptpNodeType = "MASTER_NODE"
*.grandMaster1.app[0].domain[0].masterPorts = ["eth0"]
*.grandMaster1.app[0].domain[1].gptpNodeType = "SLAVE_NODE"
*.grandMaster1.app[0].domain[1].slavePort = "eth0"
*.grandMaster2.app[0].domain[0].gptpNodeType = "SLAVE_NODE"
*.grandMaster2.app[0].domain[0].slavePort = "eth0"
*.grandMaster2.app[0].domain[1].gptpNodeType = "MASTER_NODE"
*.grandMaster2.app[0].domain[1].masterPorts = ["eth0"]

# gPTP bridges
*.bridge*.clock.typename = "MultiClock"
*.bridge*.clock.numClocks = 2

*.bridge*.hasGptp = true
*.bridge*.gptp.typename = "MultiDomainGptp"
*.bridge*.gptp.numDomains = 2
*.bridge*.gptp.domain[*].gptpNodeType = "BRIDGE_NODE"
*.bridge1.gptp.domain[0].slavePort = "eth0"
*.bridge1.gptp.domain[0].masterPorts = ["eth1", "eth2", "eth3"]
*.bridge1.gptp.domain[1].slavePort = "eth1"
*.bridge1.gptp.domain[1].masterPorts = ["eth0", "eth2", "eth3"]
*.bridge2.gptp.domain[0].slavePort = "eth1"
*.bridge2.gptp.domain[0].masterPorts = ["eth0", "eth2", "eth3"]
*.bridge2.gptp.domain[1].slavePort = "eth0"
*.bridge2.gptp.domain[1].masterPorts = ["eth1", "eth2", "eth3"]

# gPTP end stations
*.endStation*.clock.typename = "MultiClock"
*.endStation*.clock.numClocks = 2

*.endStation*.numApps = 1
*.endStation*.app[0].typename = "MultiDomainGptp"
*.endStation*.app[0].numDomains = 2
*.endStation1.app[0].clockModule = "endStation1.clock"
*.endStation2.app[0].clockModule = "endStation2.clock"
*.endStation3.app[0].clockModule = "endStation3.clock"
*.endStation4.app[0].clockModule = "endStation4.clock"
*.endStation*.app[0].domain[*].gptpNodeType = "SLAVE_NODE"
*.endStation*.app[0].domain[*].slavePort = "eth0"

# visualization
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.numDataLinkVisualizers = 2
*.visualizer.dataLinkVisualizer[*].displayLinks = true
*.visualizer.dataLinkVisualizer[*].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetDataFilter = "inet::GptpSync and domainNumber =~ 0"
*.visualizer.dataLinkVisualizer[1].packetDataFilter = "inet::GptpSync and domainNumber =~ 1"
*.visualizer.dataLinkVisualizer[0].tags = "primary GM"
*.visualizer.dataLinkVisualizer[1].tags = "hot-standby GM"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"
*.visualizer.dataLinkVisualizer[1].lineColor = "red2"

[Config TwoMastersTwoSyncTrees]
network = GptpRingExample

# gPTP grand masters
*.grandMaster*.clock.typename = "MultiClock"
*.grandMaster*.clock.numClocks = 4

*.grandMaster*.numApps = 1
*.grandMaster*.app[0].typename = "MultiDomainGptp"
*.grandMaster*.app[0].numDomains = 4
*.grandMaster1.app[0].clockModule = "grandMaster1.clock"
*.grandMaster2.app[0].clockModule = "grandMaster2.clock"

# gPTP grand master 1
*.grandMaster1.app[0].domain[0].gptpNodeType = "MASTER_NODE"
*.grandMaster1.app[0].domain[0].masterPorts = ["eth0"]
*.grandMaster1.app[0].domain[1].gptpNodeType = "MASTER_NODE"
*.grandMaster1.app[0].domain[1].masterPorts = ["eth0"]
*.grandMaster1.app[0].domain[2].gptpNodeType = "SLAVE_NODE"
*.grandMaster1.app[0].domain[2].slavePort = "eth0"
*.grandMaster1.app[0].domain[3].gptpNodeType = "SLAVE_NODE"
*.grandMaster1.app[0].domain[3].slavePort = "eth0"

# gPTP grand master 2
*.grandMaster2.app[0].domain[0].gptpNodeType = "SLAVE_NODE"
*.grandMaster2.app[0].domain[0].slavePort = "eth0"
*.grandMaster2.app[0].domain[1].gptpNodeType = "SLAVE_NODE"
*.grandMaster2.app[0].domain[1].slavePort = "eth0"
*.grandMaster2.app[0].domain[2].gptpNodeType = "MASTER_NODE"
*.grandMaster2.app[0].domain[2].masterPorts = ["eth0"]
*.grandMaster2.app[0].domain[3].gptpNodeType = "MASTER_NODE"
*.grandMaster2.app[0].domain[3].masterPorts = ["eth0"]

# gPTP bridges
*.bridge*.clock.typename = "MultiClock"
*.bridge*.clock.numClocks = 4

*.bridge*.hasGptp = true
*.bridge*.gptp.typename = "MultiDomainGptp"
*.bridge*.gptp.numDomains = 4
*.bridge*.gptp.domain[*].gptpNodeType = "BRIDGE_NODE"

# gPTP bridge 1
*.bridge1.gptp.domain[0].masterPorts = ["eth1"]
*.bridge1.gptp.domain[0].slavePort = "eth0"
*.bridge1.gptp.domain[1].masterPorts = ["eth2"]
*.bridge1.gptp.domain[1].slavePort = "eth0"
*.bridge1.gptp.domain[2].masterPorts = ["eth0", "eth1"]
*.bridge1.gptp.domain[2].slavePort = "eth2"
*.bridge1.gptp.domain[3].masterPorts = ["eth0", "eth2"]
*.bridge1.gptp.domain[3].slavePort = "eth1"

# gPTP bridge 2
*.bridge2.gptp.domain[0].masterPorts = ["eth1", "eth2"]
*.bridge2.gptp.domain[0].slavePort = "eth0"
*.bridge2.gptp.domain[1].masterPorts = ["eth2"]
*.bridge2.gptp.domain[1].slavePort = "eth1"
*.bridge2.gptp.domain[2].masterPorts = ["eth1", "eth2"]
*.bridge2.gptp.domain[2].slavePort = "eth0"
*.bridge2.gptp.domain[3].masterPorts = ["eth0", "eth2"]
*.bridge2.gptp.domain[3].slavePort = "eth1"

# gPTP bridge 3
*.bridge3.gptp.domain[0].masterPorts = ["eth1", "eth2"]
*.bridge3.gptp.domain[0].slavePort = "eth0"
*.bridge3.gptp.domain[1].masterPorts = ["eth0", "eth2"]
*.bridge3.gptp.domain[1].slavePort = "eth1"
*.bridge3.gptp.domain[2].masterPorts = ["eth2"]
*.bridge3.gptp.domain[2].slavePort = "eth0"
*.bridge3.gptp.domain[3].masterPorts = ["eth0", "eth2"]
*.bridge3.gptp.domain[3].slavePort = "eth1"

# gPTP bridge 4
*.bridge4.gptp.domain[0].masterPorts = ["eth0", "eth2"]
*.bridge4.gptp.domain[0].slavePort = "eth1"
*.bridge4.gptp.domain[1].masterPorts = ["eth0", "eth1"]
*.bridge4.gptp.domain[1].slavePort = "eth2"
*.bridge4.gptp.domain[2].masterPorts = ["eth2"]
*.bridge4.gptp.domain[2].slavePort = "eth0"
*.bridge4.gptp.domain[3].masterPorts = ["eth1"]
*.bridge4.gptp.domain[3].slavePort = "eth0"

# gPTP bridge 5
*.bridge5.gptp.domain[0].masterPorts = ["eth1", "eth2"]
*.bridge5.gptp.domain[0].slavePort = "eth0"
*.bridge5.gptp.domain[1].masterPorts = ["eth0", "eth2"]
*.bridge5.gptp.domain[1].slavePort = "eth1"
*.bridge5.gptp.domain[2].masterPorts = ["eth1", "eth2"]
*.bridge5.gptp.domain[2].slavePort = "eth0"
*.bridge5.gptp.domain[3].masterPorts = ["eth2"]
*.bridge5.gptp.domain[3].slavePort = "eth1"

# gPTP bridge 6
*.bridge6.gptp.domain[0].masterPorts = ["eth2"]
*.bridge6.gptp.domain[0].slavePort = "eth0"
*.bridge6.gptp.domain[1].masterPorts = ["eth0", "eth2"]
*.bridge6.gptp.domain[1].slavePort = "eth1"
*.bridge6.gptp.domain[2].masterPorts = ["eth1", "eth2"]
*.bridge6.gptp.domain[2].slavePort = "eth0"
*.bridge6.gptp.domain[3].masterPorts = ["eth0", "eth2"]
*.bridge6.gptp.domain[3].slavePort = "eth1"

# gPTP end stations
*.endStation*.clock.typename = "MultiClock"
*.endStation*.clock.numClocks = 4

*.endStation*.numApps = 1
*.endStation*.app[0].typename = "MultiDomainGptp"
*.endStation*.app[0].numDomains = 4
*.endStation1.app[0].clockModule = "endStation1.clock"
*.endStation2.app[0].clockModule = "endStation2.clock"
*.endStation3.app[0].clockModule = "endStation3.clock"
*.endStation4.app[0].clockModule = "endStation4.clock"
*.endStation*.app[0].domain[*].gptpNodeType = "SLAVE_NODE"
*.endStation*.app[0].domain[*].slavePort = "eth0"

# visualization
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.numDataLinkVisualizers = 4
*.visualizer.dataLinkVisualizer[*].displayLinks = true
*.visualizer.dataLinkVisualizer[*].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetDataFilter = "inet::GptpSync and domainNumber =~ 0"
*.visualizer.dataLinkVisualizer[1].packetDataFilter = "inet::GptpSync and domainNumber =~ 1"
*.visualizer.dataLinkVisualizer[2].packetDataFilter = "inet::GptpSync and domainNumber =~ 2"
*.visualizer.dataLinkVisualizer[3].packetDataFilter = "inet::GptpSync and domainNumber =~ 3"
*.visualizer.dataLinkVisualizer[0].tags = "primary GM domain0"
*.visualizer.dataLinkVisualizer[1].tags = "primary GM domain1"
*.visualizer.dataLinkVisualizer[2].tags = "hot-standby GM domain0"
*.visualizer.dataLinkVisualizer[3].tags = "hot-standby GM domain1"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue1"
*.visualizer.dataLinkVisualizer[1].lineColor = "blue4"
*.visualizer.dataLinkVisualizer[2].lineColor = "red1"
*.visualizer.dataLinkVisualizer[3].lineColor = "red4"
